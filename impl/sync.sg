let newlock = lambda slot: Mvar (Ref Nat).
    let full = mvar 1 in
        letrec lock:Nat->(U)(Ref Nat)->(U)Unit = 
            lambda flag:Nat. lambda r:Ref Nat.
                if iszero flag then 
                    if iszero ($full) then 
                        (lock flag) r
                    else
                        (lambda _:Unit.$slot) (full <- 0)
                else
                    (lambda _':Unit.((lambda _:Unit.r) (slot <- r)))  (full <- 1)
        in lock
in

newlock;

let account = ref 0 in
    let lock = newlock (mvar account) in
    let deposit = lambda _:Unit. 
    let buf = lock 0 (ref 0) in 
        account := (succ (!account));
        lock 1 buf
    in
        fork {(deposit unit), (deposit unit)}; 
